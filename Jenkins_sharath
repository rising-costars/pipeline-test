@Library('connectall_library') _
pipeline {
    agent any

    environment {
        INSIGHTS_API_KEY = credentials('INSIGHTS_API_KEY')
        INSIGHTS_API_URL = "https://rally1.rallydev.com"
        INSIGHTS_WORKSPACE_OBJECT_ID = "699998056987"
        INSIGHTS_COMPONENT_NAME = "connectall"
        DEBUG_VALUEOPS_INSIGHTS_LIBRARY=true
    }

    
    stages {
        
        stage('Checkout') {
            steps {
                echo 'Checkout stage'
            }
        }
        
        stage('Clean') {
            steps {
                echo 'Hello World'
                // sh "mvn clean:clean -f bank/pom.xml"
            }
        }
        
        stage('Build') {
            steps {
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    script {
                        try {
                            // sh "mvn -Dmaven.test.failure.ignore=true clean package -f digitalbank-gen-one/bank/pom.xml"
                            sh 'exit 0'
                        } catch (e) {
                            echo 'Something went wrong during build stage.'
                           // throw e
                        }
                    }
                }
            }
        }
        
        stage('Test') {
            steps {
                echo 'Test'
               // sh "mvn test -f digitalbank-gen-one/bank/pom.xml"
            }
        }
        
        stage('Package') {
            steps {
                echo 'Package'
            }
        }
        
        stage('Publish') {
            steps {
                echo 'Publish'
                bat 'set'
            }
        }

        stage('Post to ValueOpsInsights') {
            steps {
                script { 
                    
                    postDeployAndCommitsToInsights(
				        Runtime: "Windows",
                        BuildId: "${env.BUILD_ID}",
                       // CurrentBuildCommit: "${env.GIT_COMMIT}",
                       // PreviousSuccessBuildCommit: "${env.GIT_PREVIOUS_SUCCESSFUL_COMMIT}",                      
                        CurrentBuildCommit: "HEAD",
                        PreviousSuccessBuildCommit: "HEAD~2",                      
                        ComponentName: "${env.INSIGHTS_COMPONENT_NAME}", 
                        BuildStartTime: "${currentBuild.timeInMillis}", 
                        ApiKey: "${env.INSIGHTS_API_KEY}",
                        ApiUrl: "${env.INSIGHTS_API_URL}",
                        WorkspaceOid: "${env.INSIGHTS_WORKSPACE_OBJECT_ID}",
                        GitRepoLoc: "./" 
                    )
                }
            }    
        }
    }
}
